_____________________________________________________NÚMEROS COMPLEXOS E OPERAÇÕES______________________________________________________

Crie um tipo abstrato de dado (TAD) para manipular números complexos na linguagem Python.
O método deve:

- calcular três números complexos;
- realizar todas as operações básicas;
- e imprimir as propriedades real e img do números.
________________________________________________________________________________________________________________________________________

SOLUÇÃO:

###Definição da classe ComplexNumberOperation
class ComplexNumberOperation():
    
    ##Instânciando o objeto composto por três números complexos (método construtor):.
    
    def __init__(self, real1, img1, real2, img2, real3, img3):
        #real1 = parte real do 1º nº complexo; img1 = parte imaginária do 1º nº complexo; (seguindo a lógica dos outros dois números) ...
        self.R1 = real1
        self.I1 = img1
        self.R2 = real2
        self.I2 = img2
        self.R3 = real3
        self.I3 = img3
        
        print("O PRIMEIRO número complexo definido foi: (%d, %di)" %(self.R1, self.I1))
        print("O SEGUNDO número complexo definido foi: (%d, %di)" %(self.R2, self.I2))
        print("O TERCEIRO número complexo definido foi: (%d, %di)" %(self.R3, self.I3))
             
    ##Definição dos métodos de operações básicas para os três números complexos definidos:. 
    
    def CalcSoma(self):
        #Cálculo de soma entre os três números complexos (Z1+Z2+Z3)
        realSoma = (self.R1 + self.R2 + self.R3)
        imgSoma = (self.I1 + self.I2 + self.I3)      
        print("A SOMA dos três números complexos resultou em: (%d, %di)" %(realSoma, imgSoma))
        
    def CalcSubtracao(self):
        #Cálculo de subtração entre os três números complexos (Z1-Z2-Z3)
        realSubt = (self.R1 - self.R2 - self.R3)
        imgSubt = (self.I1 - self.I2 - self.I3)      
        print("A SUBTRAÇÃO dos três números complexos resultou em: (%d, %di)" %(realSubt, imgSubt))
        
    def CalcMultiplicacao(self):
        #Cálculo de multiplicação entre os três números complexos (Z1*Z2*Z3)
        #O produto entre os números foi realizado na ordem especificada, resultando nas partes real e imaginário em:
        realMult = (self.R1*self.R2*self.R3 - self.I1*self.I2*self.R3 - self.R1*self.I2*self.I3 - self.I1*self.R2*self.I3)
        imgMult = (self.R1*self.R2*self.I3 - self.I1*self.I2*self.I3 + self.R1*self.I2*self.R3 + self.I1*self.R2*self.R3)       
        print("A MULTIPLICAÇÃO dos três números complexos resultou em: (%d, %di)" %(realMult, imgMult))
        
    def CalcDivisao(self):
        #Cálculo de divisão entre os três números complexos ((Z1/Z2)/Z3)
        #A divisão entre os números foi realizado na ordem especificada, resultando nas partes real e imaginário em:
        realDiv = ((self.R1*self.R2*self.R3 - self.R1*self.I2*self.I3 + self.R2*self.I1*self.I3 + self.R3*self.I1*self.I2)/(self.R2*self.R2*self.R3*self.R3 + self.I2*self.I2*self.I3*self.I3 + self.R2*self.R2*self.I3*self.I3 + self.R3*self.R3*self.I2*self.I2))
        imgDiv = ((self.R2*self.R3*self.I1 - self.I1*self.I2*self.I3 - self.R1*self.R2*self.I3 - self.R1*self.R3*self.I2)/(self.R2*self.R2*self.R3*self.R3 + self.I2*self.I2*self.I3*self.I3 + self.R2*self.R2*self.I3*self.I3 + self.R3*self.R3*self.I2*self.I2)) 
        print("A DIVISÃO dos três números complexos resultou em: ({:.5f}, {:.5f}i)".format(realDiv, imgDiv))



######################################################################################################################################
######################################################################################################################################
##################
################## Jupiter Notebook Link:
################## http://localhost:8888/notebooks/Complex_Number_Operation_Code_Python.ipynb#
##################
######################################################################################################################################
######################################################################################################################################
________________________________________________________________________________________________________________________________________